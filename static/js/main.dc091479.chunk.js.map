{"version":3,"sources":["common/constants.js","common/templates.js","common/options.js","common/rules.js","components/Simulator.js","common/helpers.js","components/MultiSelectButton.js","components/ArrayInput.js","App/App.js","serviceWorker.js","index.js"],"names":["DIMENSION_LABELS","OUTPUT_OPTIONS_LABELS","SIMULATION_OPTIONS_LABELS","templates","bounce","startState","position","speed","acceleration","appliedRules","name","blackhole","cannon","defaultSimulationOptions","defaultOutputOptions","offset","scale","rules","apply","_ref","_ref$dimension","dimension","_ref$wallPosition","wallPosition","options","elapsedTime","_ref2","_ref2$gravity","gravity","_ref2$holePosition","holePosition","_ref3","_ref3$dimension","_ref3$power","power","_ref3$startTime","startTime","SimulatorContainer","styled","div","_templateObject","TheBox","_templateObject2","roundTo3decimals","value","Math","round","getStylesValues","state","arguments","length","undefined","left","top","transformScale","transformRotate","transformSkewX","transformSkewY","transformStretchX","transformStretchY","opacity","getStylesCSS","stylesValues","concat","transform","Simulator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","assign","isRunning","timeStarted","Date","now","timer","setInterval","onTimerUpdate","bind","clearInterval","slice","r","dim","setState","handleOutput","styles","handleClearOutput","_Object$assign","react_default","a","createElement","react","style","onClick","toggleRunning","Component","formatOutputCssRow","outputOptions","simulationOptions","obj","stylesValuesTransformed","transformStylesValues","keys","reduce","result","key","SelectButton","button","MultiSelectButton_templateObject","MultiSelectButton","selected","option","event","onSelect","_this2","map","handleSelect","className","ArrayValueInput","input","ArrayInput_templateObject","ArrayInput","values","labels","onChange","index","type","placeholder","title","VariableInputBlock","stateObject","label","_ref2$labels","ArrayInput_ArrayInput","toLowerCase","App","currentTemplate","output","comment","toConsumableArray","resultCSS","variable","set","parseFloat","target","MultiSelectButton_MultiSelectButton","handleSelectTemplate","handleChangeSimulationOptions","ArrayInput_VariableInputBlock","handleChangeStartState","Simulator_Simulator","logOutput","handleChangeOutputOptions","readOnly","renderOutput","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc091479.chunk.js","sourcesContent":["// Dimensions\nexport const X = 0\nexport const Y = 1\nexport const Z = 2\nexport const ROTATION = 3\nexport const OPACITY = 4\n\nexport const TIME = 2\n\nexport const SKEW = 0\nexport const STRETCH = 1\nexport const FRICTION = 2\nexport const TIMER_INTERVAL = 3\n\nexport const DIMENSION_LABELS = ['X', 'Y', 'Z', 'Rotation', 'Opacity']\nexport const OUTPUT_OPTIONS_LABELS = ['X', 'Y', 'Time']\nexport const SIMULATION_OPTIONS_LABELS = ['Skew (1/0)', 'Stretch (1/0)', 'Friction (%)', 'Timer interval (ms)']\n","export default {\n  bounce: {\n    startState: {\n      // X, Y, Z, rotation, opacity\n      position: [150, 10, 0, 0, 1],\n      speed: [0, 0, 0, 0, 0],\n      acceleration: [0, 2, 0, 0, 0]\n    },\n    appliedRules: [\n      { name: 'bounce' }\n    ]\n  },\n\n  blackhole: {\n    startState: {\n      // X, Y, Z, rotation, opacity\n      position: [150, 10, 0, 0, 1],\n      speed: [20, 20, 0, 0, 0],\n      acceleration: [0, 0, 0, 0, 0]\n    },\n    appliedRules: [\n      { name: 'blackhole' }\n    ]\n  },\n\n  cannon: {\n    startState: {\n      // X, Y, Z, rotation, opacity\n      position: [150, 10, 0, 0, 1],\n      speed: [0, 1, 0, 0, 0],\n      acceleration: [0, 0, 0, 0, 0]\n    },\n    appliedRules: [\n      { name: 'cannon' }\n    ]\n  }\n}\n","// skew (true/false), stretch (true/false), friction (%), timerInterval (ms)\nexport const defaultSimulationOptions = [1, 0, 10, 50]\n\nexport const defaultOutputOptions = {\n  // X, Y, time\n  offset: [0, 0, 0],\n  scale: [100, 100, 100]\n}\n","import { X, Y, Z, ROTATION, FRICTION } from './constants'\n\nexport default {\n\n  bounce: {\n    apply: function ({ dimension = Y, wallPosition = 250, position, speed, acceleration, elapsedTime, options }) {\n      if (position[dimension] > wallPosition) {\n        position[dimension] = wallPosition\n        speed[dimension] = -speed[dimension] * (1 - (options[FRICTION] / 100))\n        speed[ROTATION] = -speed[ROTATION] * (1 - (options[FRICTION] / 100))\n        position[ROTATION] = position[ROTATION] * (1 - (options[FRICTION] / 100)) // slow down to zero\n      }\n    }\n  },\n\n  blackhole: {\n    apply: function ({ gravity = 0.01, holePosition = [150, 150], position, speed, acceleration, elapsedTime, options }) {\n      for (let dimension = X; dimension <= Z; dimension++) {\n        acceleration[dimension] = (holePosition[dimension] - position[dimension]) * gravity\n        speed[dimension] *= (1 - (options[FRICTION] / 100) / 10)\n      }\n    }\n  },\n\n  cannon: {\n    apply: function ({ dimension = X, power = 5, startTime = 1000, position, speed, acceleration, elapsedTime, options }) {\n      if (elapsedTime > startTime) {\n        acceleration[dimension] = power\n      }\n    }\n  }\n\n}\n","import React, { Component, Fragment } from 'react'\n\nimport styled from 'styled-components'\n\nimport { X, Y, Z, ROTATION, OPACITY, TIME, SKEW, STRETCH, TIMER_INTERVAL } from '../common/constants'\nimport rules from '../common/rules'\n\nconst SimulatorContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  overflow: hidden;\n  font-size: 1vmin;\n  width:  60em;\n  height: 60em;\n  background-color: #eee;\n  border: 1px solid gray;\n`\n\nconst TheBox = styled.div`\n  position: absolute;\n  width: 15em;\n  height: 7.5em;\n  background-color: slateblue;\n  border-radius: 1em;\n`\n\nconst roundTo3decimals = value => Math.round(value * 1000) / 1000\n\nconst getStylesValues = (state, options = {}) => ({\n  elapsedTime: state.elapsedTime,\n  left: state.position[X],\n  top: state.position[Y],\n  transformScale: (1 - (state.position[Z] || 0.001) / 500),\n  transformRotate: state.position[ROTATION],\n  transformSkewX: state.speed[X],\n  transformSkewY: state.speed[Y],\n  transformStretchX: 1 + state.speed[X] / 40,\n  transformStretchY: 1 + state.speed[Y] / 40,\n  opacity: state.position[OPACITY]\n})\n\nexport const transformStylesValues = (stylesValues, outputOptions, options = {}) => ({\n  elapsedTime: stylesValues.elapsedTime * outputOptions.scale[TIME] / 100 + outputOptions.offset[TIME],\n  left: stylesValues.left * outputOptions.scale[X] / 100 + outputOptions.offset[X],\n  top: stylesValues.top * outputOptions.scale[Y] / 100 + outputOptions.offset[Y],\n  transformScale: stylesValues.transformScale,\n  transformRotate: stylesValues.transformRotate,\n  transformSkewX: stylesValues.transformSkewX,\n  transformSkewY: stylesValues.transformSkewY,\n  transformStretchX: stylesValues.transformStretchX,\n  transformStretchY: stylesValues.transformStretchY,\n  opacity: stylesValues.opacity\n})\n\nexport const getStylesCSS = (stylesValues, options) => ({\n  left: `${roundTo3decimals(stylesValues.left)}px`,\n  top: `${roundTo3decimals(stylesValues.top)}px`,\n  transform: `scale(${roundTo3decimals(stylesValues.transformScale)})` +\n    ` rotate(${roundTo3decimals(stylesValues.transformRotate)}deg)` +\n    (options[SKEW] ? ` skew(${roundTo3decimals(stylesValues.transformSkewX)}deg, ${roundTo3decimals(stylesValues.transformSkewY)}deg)` : '') +\n    (options[STRETCH] ? ` scale(${roundTo3decimals(stylesValues.transformStretchX)}, ${roundTo3decimals(stylesValues.transformStretchY)})` : ''),\n  opacity: roundTo3decimals(stylesValues.opacity)\n})\n\nexport default class Simulator extends Component {\n  constructor (props) {\n    super(props)\n    this.state = Object.assign({}, this.props.startState, {\n      isRunning: false,\n      timeStarted: Date.now(),\n      elapsedTime: 0\n    })\n  }\n\n  componentDidMount () {\n    this.timer = setInterval(this.onTimerUpdate.bind(this), this.props.options[TIMER_INTERVAL])\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.timer)\n  }\n\n  onTimerUpdate () {\n    if (this.state.isRunning) {\n      const elapsedTime = Date.now() - this.state.timeStarted\n      const position = this.state.position.slice()\n      const speed = this.state.speed.slice()\n      const acceleration = this.state.acceleration.slice()\n\n      // Rules\n      for (let r in this.props.appliedRules) {\n        rules[this.props.appliedRules[r].name].apply({ elapsedTime, position, speed, acceleration, options: this.props.options })\n      }\n\n      // Update all dimensions\n      for (let dim = 0; dim < position.length; dim++) {\n        speed[dim] += acceleration[dim]\n        position[dim] += speed[dim]\n      }\n      this.setState({ position, speed, acceleration, elapsedTime })\n      const stylesValues = getStylesValues({ elapsedTime, position, speed, acceleration }, this.props.options)\n      this.props.handleOutput({ position, speed, acceleration, elapsedTime, stylesValues, styles: getStylesCSS(stylesValues, this.props.options) })\n    }\n  }\n\n  toggleRunning () {\n    const isRunning = !this.state.isRunning\n    this.setState({ isRunning })\n    if (isRunning) {\n      this.props.handleClearOutput()\n      const timeStarted = Date.now()\n      const { position, speed, acceleration } = Object.assign({}, this.props.startState)\n      this.setState({ position, speed, acceleration, timeStarted })\n    }\n  }\n\n  render () {\n    return <Fragment>\n      <SimulatorContainer>\n        <TheBox style={getStylesCSS(getStylesValues(this.state, this.props.options), this.props.options)} />\n      </SimulatorContainer>\n      <p>\n        <button onClick={this.toggleRunning.bind(this)}>{!this.state.isRunning ? 'Start' : 'Stop'}</button>\n      </p>\n    </Fragment>\n  }\n}\n","import { getStylesCSS, transformStylesValues } from '../components/Simulator'\n\nexport const objectToCSS = obj => Object.keys(obj).reduce((result, key) => result + `${key}: ${obj[key]}; `, '')\n\nexport const formatOutputCssRow = (stylesValues, outputOptions, simulationOptions) => {\n  const stylesValuesTransformed = transformStylesValues(stylesValues, outputOptions, simulationOptions)\n  return `${stylesValuesTransformed.elapsedTime / 100}% { ${objectToCSS(getStylesCSS(stylesValuesTransformed, simulationOptions))} }\\n`\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst SelectButton = styled.button`\n  min-width: auto;\n\n  &:hover:not(:disabled),\n  &:focus:not(:disabled) {\n  }\n  &:hover:not(:disabled) {\n  }\n  &:active:hover {\n  }\n  &.selected {\n    border: 2px solid blue;\n  }\n`\n\nexport default class MultiSelectButton extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { selected: props.selected || props.options[0] }\n  }\n\n  handleSelect (option, event) {\n    this.setState({ selected: option })\n    if (this.props.onSelect) this.props.onSelect(option)\n  }\n\n  render () {\n    return <span>\n      { this.props.options.map(option => <SelectButton key={option} onClick={this.handleSelect.bind(this, option)} className={this.state.selected === option ? 'selected' : null}>{option}</SelectButton>) }\n    </span>\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { DIMENSION_LABELS } from '../common/constants'\n\nconst ArrayValueInput = styled.input`\n  width: 4em;\n  margin: 0 0.05em;\n`\n\nexport const ArrayInput = ({ values, labels, onChange }) => <span>\n  {values.map((value, index) => <ArrayValueInput\n    key={index}\n    type='number'\n    placeholder={labels[index]}\n    title={labels[index]}\n    value={value}\n    onChange={onChange.bind(this, index)}\n  />)}\n</span>\n\nexport const VariableInputBlock = ({ stateObject, label, onChange, labels = DIMENSION_LABELS }) => <p>\n  <label>{label}:</label>\n  <ArrayInput\n    values={stateObject[label.toLowerCase()]}\n    labels={labels}\n    onChange={onChange}\n  />\n</p>\n","import React, { Component } from 'react'\nimport { set } from 'lodash'\n\nimport './App.css'\n\nimport { OUTPUT_OPTIONS_LABELS, SIMULATION_OPTIONS_LABELS } from '../common/constants'\nimport templates from '../common/templates'\nimport { defaultSimulationOptions, defaultOutputOptions } from '../common/options'\nimport { formatOutputCssRow } from '../common/helpers'\n\nimport Simulator from '../components/Simulator'\nimport MultiSelectButton from '../components/MultiSelectButton'\nimport { ArrayInput, VariableInputBlock } from '../components/ArrayInput'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    const currentTemplate = 'bounce'\n    this.state = {\n      currentTemplate,\n      startState: templates[currentTemplate].startState,\n      output: [],\n      outputOptions: defaultOutputOptions,\n      simulationOptions: defaultSimulationOptions\n    }\n  }\n\n  logOutput ({ comment, position, speed, acceleration, elapsedTime, stylesValues, styles }) {\n    const output = [...this.state.output, stylesValues]\n    this.setState({ output })\n  }\n\n  renderOutput () {\n    return this.state.output.reduce((resultCSS, stylesValues) => resultCSS + formatOutputCssRow(stylesValues, this.state.outputOptions, this.state.simulationOptions), '')\n  }\n\n  handleClearOutput () {\n    this.setState({ output: [] })\n  }\n\n  handleSelectTemplate (currentTemplate) {\n    this.setState({ currentTemplate, startState: templates[currentTemplate].startState })\n  }\n\n  handleChangeStartState (variable, index, event) {\n    const startState = Object.assign({}, this.state.startState)\n    set(startState, `${variable}.${index}`, parseFloat(event.target.value))\n    this.setState({ startState })\n  }\n\n  handleChangeOutputOptions (variable, index, event) {\n    const outputOptions = Object.assign({}, this.state.outputOptions)\n    set(outputOptions, `${variable}.${index}`, parseFloat(event.target.value))\n    this.setState({ outputOptions })\n  }\n\n  // Array, not object\n  handleChangeSimulationOptions (index, event) {\n    const simulationOptions = this.state.simulationOptions.slice()\n    set(simulationOptions, `${index}`, parseFloat(event.target.value))\n    this.setState({ simulationOptions })\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <h1>CSS Motion Toy</h1>\n        <p>Create CSS animations based on physics simulation</p>\n\n        <h3>Simulation settings</h3>\n\n        <MultiSelectButton\n          options={['bounce', 'blackhole', 'cannon']}\n          onSelect={this.handleSelectTemplate.bind(this)}\n        />\n\n        <p>\n          <label>Settings:</label>\n          <ArrayInput\n            values={this.state.simulationOptions}\n            labels={SIMULATION_OPTIONS_LABELS}\n            onChange={this.handleChangeSimulationOptions.bind(this)}\n          />\n        </p>\n\n        <h3>Object start values</h3>\n\n        <VariableInputBlock\n          label='Position'\n          stateObject={this.state.startState}\n          onChange={this.handleChangeStartState.bind(this, 'position')}\n        />\n        <VariableInputBlock\n          label='Speed'\n          stateObject={this.state.startState}\n          onChange={this.handleChangeStartState.bind(this, 'speed')}\n        />\n        <VariableInputBlock\n          label='Acceleration'\n          stateObject={this.state.startState}\n          onChange={this.handleChangeStartState.bind(this, 'acceleration')}\n        />\n\n        <Simulator\n          startState={this.state.startState}\n          appliedRules={templates[this.state.currentTemplate].appliedRules}\n          options={this.state.simulationOptions}\n          handleOutput={this.logOutput.bind(this)}\n          handleClearOutput={this.handleClearOutput.bind(this)}\n        />\n\n        <h2>Output</h2>\n        <VariableInputBlock\n          label='Offset'\n          stateObject={this.state.outputOptions}\n          onChange={this.handleChangeOutputOptions.bind(this, 'offset')}\n          labels={OUTPUT_OPTIONS_LABELS}\n        />\n        <VariableInputBlock\n          label='Scale'\n          stateObject={this.state.outputOptions}\n          onChange={this.handleChangeOutputOptions.bind(this, 'scale')}\n          labels={OUTPUT_OPTIONS_LABELS}\n        />\n        <textarea readOnly value={this.renderOutput()} />\n\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}