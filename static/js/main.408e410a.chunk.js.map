{"version":3,"sources":["common/constants.js","common/rules.js","components/Simulator.js","components/MultiSelectButton.js","components/ArrayInput.js","App/App.js","serviceWorker.js","index.js"],"names":["DIMENSION_LABELS","rules","bounce","apply","_ref","_ref$dimension","dimension","_ref$wallPosition","wallPosition","position","speed","options","acceleration","elapsedTime","friction","blackhole","_ref2","_ref2$gravity","gravity","_ref2$holePosition","holePosition","cannon","_ref3","_ref3$dimension","_ref3$power","power","_ref3$startTime","startTime","SimulatorContainer","styled","div","_templateObject","TheBox","_templateObject2","roundTo3decimals","value","Math","round","getStyleProps","state","arguments","length","undefined","left","concat","top","transform","skew","stretch","opacity","Simulator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","assign","startState","isRunning","timeStarted","Date","now","timer","setInterval","onTimerUpdate","bind","timerInterval","clearInterval","slice","r","appliedRules","name","dim","setState","handleOutput","styles","_Object$assign","react_default","a","createElement","react","style","onClick","toggleRunning","Component","SelectButton","button","MultiSelectButton_templateObject","MultiSelectButton","selected","option","event","onSelect","_this2","map","key","handleSelect","className","ArrayValueInput","input","ArrayInput_templateObject","ArrayInput","values","labels","onChange","index","type","placeholder","title","set","require","templates","VariableInputBlock","label","toLowerCase","App","currentTemplate","comment","obj","console","log","keys","reduce","result","variable","parseFloat","target","MultiSelectButton_MultiSelectButton","handleSelectTemplate","App_VariableInputBlock","handleChangeStartState","Simulator_Simulator","logOutput","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.408e410a.chunk.js","sourcesContent":["// Dimensions\nexport const X = 0\nexport const Y = 1\nexport const Z = 2\nexport const ROTATION = 3\nexport const OPACITY = 4\n\nexport const DIMENSION_LABELS = ['X', 'Y', 'Z', 'ROTATION', 'OPACITY']\n","import { X, Y, Z, ROTATION } from './constants'\n\nexport default {\n\n  bounce: {\n    apply: function ({ dimension = Y, wallPosition = 250, position, speed, acceleration, elapsedTime, options }) {\n      if (position[dimension] > wallPosition) {\n        position[dimension] = wallPosition\n        speed[dimension] = -speed[dimension] * (1 - options.friction)\n        speed[ROTATION] = -speed[ROTATION] * (1 - options.friction)\n        position[ROTATION] = position[ROTATION] * (1 - options.friction) // slow down to zero\n      }\n    }\n  },\n\n  blackhole: {\n    apply: function ({ gravity = 0.01, holePosition = [150, 150], position, speed, acceleration, elapsedTime, options }) {\n      for (let dimension = X; dimension <= Z; dimension++) {\n        acceleration[dimension] = (holePosition[dimension] - position[dimension]) * gravity\n        speed[dimension] *= (1 - options.friction / 10)\n      }\n    }\n  },\n\n  cannon: {\n    apply: function ({ dimension = X, power = 5, startTime = 1000, position, speed, acceleration, elapsedTime, options }) {\n      if (elapsedTime > startTime) {\n        acceleration[dimension] = power\n      }\n    }\n  }\n\n}\n","import React, { Component, Fragment } from 'react'\n\nimport styled from 'styled-components'\n\nimport { X, Y, Z, ROTATION, OPACITY } from '../common/constants'\nimport rules from '../common/rules'\n\nconst SimulatorContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  overflow: hidden;\n  font-size: 1vmin;\n  width:  60em;\n  height: 60em;\n  background-color: #eee;\n  border: 1px solid gray;\n`\n\nconst TheBox = styled.div`\n  position: absolute;\n  width: 15em;\n  height: 7.5em;\n  background-color: slateblue;\n  border-radius: 1em;\n`\n\nconst roundTo3decimals = value => Math.round(value * 1000) / 1000\n\nconst getStyleProps = (state, options = {}) => ({\n  left: `${roundTo3decimals(state.position[X])}px`,\n  top: `${roundTo3decimals(state.position[Y])}px`,\n  transform: `scale(${roundTo3decimals(1 - (state.position[Z] || 0.001) / 500)})` +\n    ` rotate(${roundTo3decimals(state.position[ROTATION])}deg)` +\n    (options.skew ? ` skew(${roundTo3decimals(state.speed[X])}deg, ${roundTo3decimals(state.speed[Y])}deg)` : '') +\n    (options.stretch ? ` scale(${roundTo3decimals(1 + state.speed[X] / 40)}, ${roundTo3decimals(1 + state.speed[Y] / 40)})` : ''),\n  opacity: roundTo3decimals(state.position[OPACITY])\n})\n\nexport default class Simulator extends Component {\n  constructor (props) {\n    super(props)\n    this.state = Object.assign({}, this.props.startState, {\n      isRunning: false,\n      timeStarted: Date.now(),\n      elapsedTime: 0\n    })\n  }\n\n  componentDidMount () {\n    this.timer = setInterval(this.onTimerUpdate.bind(this), this.props.options.timerInterval)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.timer)\n  }\n\n  onTimerUpdate () {\n    if (this.state.isRunning) {\n      const elapsedTime = Date.now() - this.state.timeStarted\n      const position = this.state.position.slice()\n      const speed = this.state.speed.slice()\n      const acceleration = this.state.acceleration.slice()\n\n      // Rules\n      for (let r in this.props.appliedRules) {\n        rules[this.props.appliedRules[r].name].apply({ elapsedTime, position, speed, acceleration, options: this.props.options })\n      }\n\n      // Update all dimensions\n      for (let dim = 0; dim < position.length; dim++) {\n        speed[dim] += acceleration[dim]\n        position[dim] += speed[dim]\n      }\n      this.setState({ position, speed, acceleration, elapsedTime })\n      this.props.handleOutput({ position, speed, acceleration, elapsedTime, styles: getStyleProps({ position, speed, acceleration }, this.props.options) })\n    }\n  }\n\n  toggleRunning () {\n    const isRunning = !this.state.isRunning\n    this.setState({ isRunning })\n    if (isRunning) {\n      const timeStarted = Date.now()\n      const { position, speed, acceleration } = Object.assign({}, this.props.startState)\n      this.setState({ position, speed, acceleration, timeStarted })\n    }\n  }\n\n  render () {\n    return <Fragment>\n      <SimulatorContainer>\n        <TheBox style={getStyleProps(this.state, this.props.options)} />\n      </SimulatorContainer>\n      <p>\n        <button onClick={this.toggleRunning.bind(this)}>{!this.state.isRunning ? 'Start' : 'Stop'}</button>\n      </p>\n    </Fragment>\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst SelectButton = styled.button`\n  min-width: auto;\n\n  &:hover:not(:disabled),\n  &:focus:not(:disabled) {\n  }\n  &:hover:not(:disabled) {\n  }\n  &:active:hover {\n  }\n  &.selected {\n    border: 2px solid blue;\n  }\n`\n\nexport default class MultiSelectButton extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { selected: props.selected || props.options[0] }\n  }\n\n  handleSelect (option, event) {\n    this.setState({ selected: option })\n    if (this.props.onSelect) this.props.onSelect(option)\n  }\n\n  render () {\n    return <span>\n      { this.props.options.map(option => <SelectButton key={option} onClick={this.handleSelect.bind(this, option)} className={this.state.selected === option ? 'selected' : null}>{option}</SelectButton>) }\n    </span>\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ArrayValueInput = styled.input`\n  width: 4em;\n  margin: 0 0.05em;\n`\n\nexport default ({ values, labels, onChange }) => <span>\n  {values.map((value, index) => <ArrayValueInput key={index} type='number' placeholder={labels[index]} title={labels[index]} value={value} onChange={onChange.bind(this, index)} />)}\n</span>\n","import React, { Component } from 'react'\nimport './App.css'\n\nimport { DIMENSION_LABELS } from '../common/constants'\nimport Simulator from '../components/Simulator'\nimport MultiSelectButton from '../components/MultiSelectButton'\nimport ArrayInput from '../components/ArrayInput'\n\nconst { set } = require('lodash')\n\nconst templates = {\n  bounce: {\n    startState: {\n      // X, Y, Z, rotation, opacity\n      position: [150, 10, 0, 0, 1],\n      speed: [0, 0, 0, 0, 0],\n      acceleration: [0, 2, 0, 0, 0]\n    },\n    appliedRules: [\n      { name: 'bounce' }\n    ]\n  },\n\n  blackhole: {\n    startState: {\n      // X, Y, Z, rotation, opacity\n      position: [150, 10, 0, 0, 1],\n      speed: [20, 20, 0, 0, 0],\n      acceleration: [0, 0, 0, 0, 0]\n    },\n    appliedRules: [\n      { name: 'blackhole' }\n    ]\n  },\n\n  cannon: {\n    startState: {\n      // X, Y, Z, rotation, opacity\n      position: [150, 10, 0, 0, 1],\n      speed: [0, 1, 0, 0, 0],\n      acceleration: [0, 0, 0, 0, 0]\n    },\n    appliedRules: [\n      { name: 'cannon' }\n    ]\n  }\n}\n\nconst options = {\n  skew: true,\n  stretch: false,\n  friction: 0.1,\n  timerInterval: 50\n}\n\nconst objectToCSS = obj => Object.keys(obj).reduce((result, key) => result + `${key}: ${obj[key]}; `, '')\n\nconst VariableInputBlock = ({ startState, label, onChange }) => <p>\n  <label>{label}:</label>\n  <ArrayInput\n    values={startState[label.toLowerCase()]}\n    labels={DIMENSION_LABELS}\n    onChange={onChange}\n  />\n</p>\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    const currentTemplate = 'bounce'\n    this.state = {\n      currentTemplate,\n      startState: templates[currentTemplate].startState\n    }\n  }\n\n  logOutput ({ comment, position, speed, acceleration, elapsedTime, styles }) {\n    console.log(`${elapsedTime / 100}% { ${objectToCSS(styles)}}`)\n  }\n\n  handleSelectTemplate (currentTemplate) {\n    this.setState({ currentTemplate, startState: templates[currentTemplate].startState })\n  }\n\n  handleChangeStartState (variable, index, event) {\n    const startState = Object.assign({}, this.state.startState)\n    set(startState, `${variable}.${index}`, parseFloat(event.target.value))\n    this.setState({ startState })\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <h1>CSS Motion Toy</h1>\n        <p>Create CSS animations based on physics simulation</p>\n        <p>\n          <MultiSelectButton\n            options={['bounce', 'blackhole', 'cannon']}\n            onSelect={this.handleSelectTemplate.bind(this)}\n          />\n        </p>\n        <VariableInputBlock\n          label='Position'\n          startState={this.state.startState}\n          onChange={this.handleChangeStartState.bind(this, 'position')}\n        />\n        <VariableInputBlock\n          label='Speed'\n          startState={this.state.startState}\n          onChange={this.handleChangeStartState.bind(this, 'speed')}\n        />\n        <VariableInputBlock\n          label='Acceleration'\n          startState={this.state.startState}\n          onChange={this.handleChangeStartState.bind(this, 'acceleration')}\n        />\n        <Simulator\n          startState={this.state.startState}\n          appliedRules={templates[this.state.currentTemplate].appliedRules}\n          options={options}\n          handleOutput={this.logOutput}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}